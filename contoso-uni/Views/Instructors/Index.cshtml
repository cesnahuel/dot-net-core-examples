@model ContosoUniversity.Models.SchoolViewModels.InstructorIndexData

@using ContosoUniversity.Models;

@{
    ViewData["Title"] = "Instructors";
    // create dummy instances for DysplayNameFor
    Instructor instructorModel = null;
    Course courseModel = null;
    Enrollment enrollmentModel = null;
    Student studentModel = null;
}

<h2>@ViewData["Title"]</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => instructorModel.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => instructorModel.FirstMidName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => instructorModel.HireDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => instructorModel.OfficeAssignment)
                </th>
                <th>
                    @Html.DisplayNameFor(model => instructorModel.CourseAssignments)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Instructors)
{
    string selectedRow = "";
    // Cast object to Nullable<int>
    if (item.InstructorId == (int?)ViewData["InstructorId"])
    {
        selectedRow = "class=success";
    }
        <tr @selectedRow>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HireDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OfficeAssignment.Location)
            </td>
            <td>
                @foreach (var course in item.CourseAssignments)
                {
                    @Html.DisplayFor(modelItem => course.Course.CourseId)
                    // Apply text tag for inserting text (space in this context)
                    // or alternatively use razor syntax "@: "
                    <text> </text>
                    @Html.DisplayFor(modelItem => course.Course.Title)
                    <br/>
                }
            </td>
            <td>
                <a asp-action="Index" asp-route-id="@item.InstructorId">Select</a> |
                <a asp-action="Edit" asp-route-id="@item.InstructorId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.InstructorId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.InstructorId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@if (Model.Courses != null)
{
    <h3>Courses Taught by Selected Instructor</h3>
    <table class="table">
        <tr>
            <th></th>
            <th>@Html.DisplayNameFor(model => courseModel.CourseId)</th>
            <th>@Html.DisplayNameFor(model => courseModel.Title)</th>
            <th>@Html.DisplayNameFor(model => courseModel.Department)</th>
        </tr>
        @foreach (var item in Model.Courses)
        {
            string selectedRow = "";
            if (item.CourseId == (int?)ViewData["CourseId"])
            {
                selectedRow = "success";
            }
            <tr class="@selectedRow">
                <td>
                    <a asp-action="Index" asp-route-courseId="@item.CourseId">Select</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department.Name)
                </td>
            </tr>
        }
    </table>
}
@if (Model.Enrollments != null)
{
    <h3>
        Students Enrolled in Selected Course
    </h3>
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(model => studentModel.FullName)</th>
            <th>@Html.DisplayNameFor(model => enrollmentModel.Grade)</th>
        </tr>
        @foreach (var item in Model.Enrollments)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade)
                </td>
            </tr>
        }
    </table>
}
